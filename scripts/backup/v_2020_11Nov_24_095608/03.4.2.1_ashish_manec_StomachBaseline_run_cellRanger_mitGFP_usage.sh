# pwd
cd /home/rad/users/gaurav/projects/seqAnalysis/scrnaseq

#-------------------------------------------------------
# File and folder names
projDir="/media/rad/HDD2/temp_manec/02StomachBaseline"
fastqdir="${projDir}/input/fastq"
refDir="${projDir}/input/reference"
finalFasta="${refDir}/GRCm38_primary_assembly_GFP_hgMycIresCd2.fa"
mousegtf="/media/rad/HDD2/temp_manec/01StomatchTumor/Ref_mouse_sanger_MmHgMycIresCd2/genes/genes.gtf"
mmpcgtf="${refDir}/mouse_MmHgMycIresCd2_protein_coding_genes.gtf"
outid='StomachBaseline'
ssPath="${projDir}/input/samplesheet/cellranger_samplesheet_Stomachbaseline.csv"
runpath="${projDir}/input/201021_NB501802_0291_AHTVYMBGXG"
ncores=3
maxmem=72
mempercore=24
transcriptomeDir="${refDir}/GRCm38_primary_assembly_GFP_hgMycIresCd2"
featureCountsDir="${projDir}/output/featureCounts"; mkdir -p ${featureCountsDir}
#-------------------------------------------------------

# Run Illumina demultiplexer on sample sheets that contain 10x-specific sample index sets, and generate 10x-specific quality metrics after the demultiplex
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --run                 | (Required) The path of Illumina BCL run folder.                                                                   |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --id                  | (Optional; defaults to the name of the flowcell referred to by --run)                                             |
# |                       | Name of the folder created by mkfastq.                                                                            |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --samplesheet         | (Optional) Path to an Illumina Experiment Manager-compatible sample sheet which contains                          |
# |                       | 10x sample index names (e.g., SI-GA-A1 or SI-TT-A12) in the sample index column. All other information,           |
# |                       | such as sample names and lanes, should be in the sample sheet.                                                    |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --qc                  | (Optional) Calculate both sequencing and 10x-specific metrics, including per-sample                               |
# |                       | barcode matching rate. Will not be performed unless this flag is specified. Not supported for NovaSeq flow cells. |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --delete-undetermined | (bcl2fastq option) Delete the Undetermined FASTQs generated by bcl2fastq.                                         |
# |                       | Useful if you are demultiplexing a small number of samples from a large flowcell.                                 |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --output-dir          | (bcl2fastq option) Generate FASTQ output in a path of your own choosing,                                          |
# |                       | instead of flowcell_id/outs/fastq_path.                                                                           |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --localcores          | (Martian option) Set max cores the pipeline may request at one time.                                              |
# |                       | Only applies when --jobmode=local.                                                                                |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
# | --localmem            | (Martian option) Set max GB the pipeline may request at one time.                                                 |
# |                       | Only applies when --jobmode=local.                                                                                |
# +-----------------------+-------------------------------------------------------------------------------------------------------------------+
cellranger mkfastq --run=${runpath} --id=${outid} --samplesheet=${ssPath} --qc --output-dir=${outdir} --localcores=2 --localmem=200 --delete-undetermined
# Outputs:
# - Run QC metrics:        /media/rad/HDD2/temp_manec/02StomachBaseline/StomachBaseline/outs/qc_summary.json
# - FASTQ output folder:   /media/rad/HDD2/temp_manec/02StomachBaseline/output/StomachBaseline
# - Interop output folder: /media/rad/HDD2/temp_manec/02StomachBaseline/StomachBaseline/outs/interop_path
# - Input samplesheet:     /media/rad/HDD2/temp_manec/02StomachBaseline/StomachBaseline/outs/input_samplesheet.csv
# Waiting 6 seconds for UI to do final refresh.
# Pipestance completed successfully!
mv ${outdir}/* ${fastqdir}

# Get the GFP and the sanger vector sequence into a file (obtained from Joscha)
# Used: GFP + spacer sequence until bgh pA signal
cp -rv /media/rad/SSD1/Genomes/STAR_References/MmHgMycIresCd2/hgMycIresCd2_individual.fa ${refDir}

# Get the GFP, humanMyc, IRES and human CD2 sequence
cd ${refDir}
cat GFP.fa hgMycIresCd2_individual.fa > GFP_hgMycIresCd2.fa

# Add the GFP, humanMyc, IRES and human CD2 sequence to the mouse genome
cat /media/rad/SSD1/Genomes/STAR_References/mouse/GRCm38.primary_assembly.genome.fa GFP_hgMycIresCd2.fa > GRCm38_primary_assembly_GFP_hgMycIresCd2.fa
samtools faidx GRCm38_primary_assembly_GFP_hgMycIresCd2.fa
cd -

# GTF file
# GTF files can contain entries for non-polyA transcripts that overlap with protein-coding gene models 
# These entries can cause reads to be flagged as mapped to multiple genes (multi-mapped) because of the overlapping annotations. 
# In the case where reads are flagged as multi-mapped, they are not counted
# To remove these entries from the GTF, add this filter argument to the mkgtf command: --attribute=gene_type:protein_coding
cellranger mkgtf  ${mousegtf} ${mmpcgtf} --attribute=gene_type:protein_coding

# Get the number of bases in the GFP, humanMyc, IRES and human CD2 sequence
# GFPlength=$(cat ${refDir}/GFP.fa | grep -v "^>" | tr -d "\n" | wc -c)
cat ${refDir}/GFP_hgMycIresCd2.fa | awk '$0 ~ ">" {if (NR > 1) {print c;} c=0;printf substr($0,2,100) "\t"; } $0 !~ ">" {c+=length($0);} END { print c; }'
# GFP      738
# humanMyc 313
# Gap      111
# IRES     561
# humanCd2 1565

# Make a custom GTF for the GFP
echo -e 'GFP\tcustom\texon\t1\t738\t.\t+\t.\tgene_id "GFP"; transcript_id "GFP"; gene_name "GFP"; gene_type "protein_coding";'| tee ${refDir}/GFP_hgMycIresCd2.gtf
echo -e 'humanMyc\tcustom\texon\t1\t313\t.\t+\t.\tgene_id "humanMyc"; transcript_id "humanMyc"; gene_name "humanMyc"; gene_type "protein_coding";'| tee -a ${refDir}/GFP_hgMycIresCd2.gtf
echo -e 'Gap\tcustom\texon\t1\t111\t.\t+\t.\tgene_id "Gap"; transcript_id "Gap"; gene_name "Gap"; gene_type "protein_coding";'| tee -a ${refDir}/GFP_hgMycIresCd2.gtf
echo -e 'IRES\tcustom\texon\t1\t561\t.\t+\t.\tgene_id "IRES"; transcript_id "IRES"; gene_name "IRES"; gene_type "protein_coding";'| tee -a ${refDir}/GFP_hgMycIresCd2.gtf
echo -e 'humanCd2\tcustom\texon\t1\t1565\t.\t+\t.\tgene_id "humanCd2"; transcript_id "humanCd2"; gene_name "humanCd2"; gene_type "protein_coding";'| tee -a ${refDir}/GFP_hgMycIresCd2.gtf

# Add the GFP to the mouse fasta and gtf
cat ${mmpcgtf} ${refDir}/GFP_hgMycIresCd2.gtf > tmp && mv tmp ${mmpcgtf}

# Create the refrence
cd ${refDir}
cellranger mkref --genome ${transcriptomeDir} --fasta ${finalFasta} --gene ${mmpcgtf}
cd -

# Get the counts
cd ${featureCountsDir}
finalfastqdir="${fastqdir}/HTVYMBGXG"
ncellsExpected=10000
# ncellsForce=$(echo ${ncellsExpected}/1.25 | bc) 
for sampleID in 3306_tumorA  3306_tumorB  3520_Antrum  3520_Corpus;
do 
  echo cellranger count --id=${sampleID} --transcriptome=${transcriptomeDir} --fastqs=${finalfastqdir}/${sampleID}  --sample=${sampleID} --localcores=16  --force-cells=${ncellsExpected} --nosecondary
  cellranger count --id=${sampleID} --transcriptome=${transcriptomeDir} --fastqs=${finalfastqdir}/${sampleID}  --sample=${sampleID} --localcores=16  --force-cells=${ncellsExpected} --nosecondary
  echo 
done
cd -
